{
  "hash": "7b6ecaf82071c81257c56799f9eef444",
  "result": {
    "markdown": "---\ntitle: \"Visualisation & Reporting Review\"\nexecute: \n  warning: false\n---\n\n\n\n\n\n:::{.callout-note} \n\n## A flexible but automation-lacking reporting method\n\nWhile the plot are probably the most effective way to output simulation results, there should be more context and details available.\n\nIn fact there is no real \"reporting\", except if the user digs into the R object structure.\n\n\n:::\n\nThis is a run of the [visualisation workflow](https://esqlabs.github.io/esqlabsR/articles/visualization-and-reporting.html)\n\n# Simulation initialisation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(esqlabsR)\n# Create a project configuration\nprojectConfiguration <- createDefaultProjectConfiguration(path = \"_data/TestProject/Code/ProjectConfiguration.xlsx\")\n\n# Replace variables to match my project structure\nprojectConfiguration$dataFolder <- \"_data/TestProject/Data/\"\nprojectConfiguration$modelFolder <- \"_data/TestProject/Models/Simulations/\"\nprojectConfiguration$paramsFolder <- \"_data/TestProject/Parameters/\"\nprojectConfiguration$outputFolder <- \"_data/TestProject/Outputs/\"\n\nprint(projectConfiguration)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nProjectConfiguration: \n   Model folder: _data/TestProject/Models/Simulations/ \n   Parameters folder: _data/TestProject/Parameters/ \n   Parameters file name: ModelParameters.xlsx \n   Individual parameters file name: IndividualParameters.xlsx \n   Individual physiology file name: IndividualPhysiology.xlsx \n   Population parameters file name: PopulationParameters.xlsx \n   Scenario definitions file name: Scenarios.xlsx \n   Scenario applications definitions file name: ApplicationParameters.xlsx \n   Experimental data folder: _data/TestProject/Data/ \n   Experimental data file: TestProject_TimeValuesData.xlsx \n   Data importer configuration: esqlabs_dataImporter_configuration.xml \n   Output folder: _data/TestProject/Outputs/ \n   Output device: \n```\n:::\n\n```{.r .cell-code}\n# Create `ScenarioConfiguration` objects from excel files\nscenarioConfigurations <- readScenarioConfigurationFromExcel(\n  scenarioNames = \"TestScenario\",\n  projectConfiguration = projectConfiguration\n)\n# Run scenario configuration\nsimulatedScenarios <- runScenarios(\n  scenarioConfigurations = scenarioConfigurations,\n  customParams = NULL, saveSimulationsToPKML = FALSE\n)\n\n# Load observed data\ndataSheets <- \"Laskin 1982.Group A\"\nobservedData <- loadObservedData(projectConfiguration = projectConfiguration, sheets = dataSheets)\n```\n:::\n\n\n# Combined Data creation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataCombined <- DataCombined$new()\ndataCombined$addDataSets(observedData, names = \"Observed\", groups = \"Aciclovir\")\ndataCombined$addSimulationResults(simulatedScenarios$TestScenario$results,\n                                  names = \"Simulated\",\n                                  groups = \"Aciclovir\"\n)\n```\n:::\n\n\n\n# Plot Configuration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotConfig <- createEsqlabsPlotConfiguration()\ngridConfig <- createEsqlabsPlotGridConfiguration()\nexportConfig <- createEsqlabsExportConfiguration(projectConfiguration)\n```\n:::\n\n\n# Plot Generation\n\n\n::: {.column-margin}\n:::{.callout-important}\nCould not use these functions, they seem to not exist anymore in the package `ospsuite`\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotConfig$title <- \"Time profile\"\nindivPlot <- plotIndividualTimeProfile(dataCombined, defaultPlotConfiguration = plotConfig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in if (yDimensionString %in% concDimensions) {: la condition est de longueur > 1\n```\n:::\n\n```{.r .cell-code}\nplotConfig$title <- \"Observed-vs-simulated\"\nobsVsSimPlot <- plotObservedVsSimulated(dataCombined, defaultPlotConfiguration = plotConfig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plotObservedVsSimulated(dataCombined, defaultPlotConfiguration = plotConfig): impossible de trouver la fonction \"plotObservedVsSimulated\"\n```\n:::\n\n```{.r .cell-code}\nplotConfig$title <- \"Res-vs-time\"\nresVsTimePlot <- plotResidualsVsTime(dataCombined, defaultPlotConfiguration = plotConfig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plotResidualsVsTime(dataCombined, defaultPlotConfiguration = plotConfig): impossible de trouver la fonction \"plotResidualsVsTime\"\n```\n:::\n\n```{.r .cell-code}\nplotConfig$title <- \"Res-vs-simulated\"\nresVsSimPlot <- plotResidualsVsSimulated(dataCombined, defaultPlotConfiguration = plotConfig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plotResidualsVsSimulated(dataCombined, defaultPlotConfiguration = plotConfig): impossible de trouver la fonction \"plotResidualsVsSimulated\"\n```\n:::\n\n```{.r .cell-code}\ngridConfig$addPlots(list(indivPlot, obsVsSimPlot, resVsTimePlot, resVsSimPlot))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in gridConfig$addPlots(list(indivPlot, obsVsSimPlot, resVsTimePlot, : objet 'indivPlot' introuvable\n```\n:::\n\n```{.r .cell-code}\ngridConfig$title <- \"All aciclovir plots\"\ngridPlot <- plotGrid(gridConfig)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: Can only wrap ggplot and/or grob objects or a list of them\n```\n:::\n\n```{.r .cell-code}\ngridPlot\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): objet 'gridPlot' introuvable\n```\n:::\n:::\n\n\n\n\nOutputs should look like this:\n\n![](https://esqlabs.github.io/esqlabsR/articles/visualization-and-reporting_files/figure-html/plot-time-profile-1.png)\n\nUsing output dataframe instead\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- dataCombined$toDataFrame()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nggplot() +\n  geom_point(data = \n               data %>% filter(dataType == \"observed\") %>%\n               mutate(xValues = xValues*60,\n                      yValues = yValues*1000/molWeight),\n             aes(x=xValues, y=yValues, color = dataType)) +\n  geom_line(data = data %>% \n              filter(dataType == \"simulated\"),\n            aes(x=xValues, y=yValues, color = dataType))+\nlabs(x = \"Time [min]\",\n     y = \"Concentration [Âµmol]\")\n```\n\n::: {.cell-output-display}\n![](test_visualize_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "test_visualize_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}