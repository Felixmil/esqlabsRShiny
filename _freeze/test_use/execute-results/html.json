{
  "hash": "ce68e8045d70224f43fe5385f38f008e",
  "result": {
    "markdown": "---\ntitle: \"User Experience Review\"\nexecute: \n  warning: false\n  cache: true\n---\n\n\n\n:::{.callout-note} \n\n## Easy to use, hard to customise\n\nThe workflow is pretty straightforward. I'm surprised I could run such an interesting simulation so easily. \n\nThe simulation parameters and arguments are easily understandable since the functions are domain driven developped. \n\nHowever, setup a new scenarios with other values is tedious.\n\nThis review could show what are the User Exeperience Inputs and Outputs:\n\n- Inputs: Designing a simulation is mostly setting parameters (here through excel files),\n- Outputs: One of the expected result output for the user is graphical: here, a curve showing concentration over time,\n\n**Questions**:\n\n- except the simulation settings, what are the parameters/files that a user may need to change ?\n- what kind of compound can be simulated ?\n- what are the main biological factors that will impact the compound half-life ?\n:::\n\n\nThis is a run of the [Standard Workflow](https://esqlabs.github.io/esqlabsR/articles/standard-workflow.html)\n\n\n## Package Import\n\n\n::: {.cell hash='test_use_cache/html/unnamed-chunk-1_5b85157abc6a27e84b39d094d1a4c288'}\n\n```{.r .cell-code}\nlibrary(esqlabsR)\n```\n:::\n\n\n\n##  Project Configuration\n\n:::{.callout-note}\nDownloaded the whole esqlabsR package and put the `tests/data/TestProject/` files in `_data/TestProject/`\n:::\n\n\n:::{.column-margin}\n:::{.callout-tip}\nThese parameters could be depend on a \"root\" directory. for example:\n\n```r\nprojConf$root_dir <- \"_data/TestProject\"\nprojConf$dataFolder  <-  paste0(projConf$root_dir, \"Data/\")\n\n```\n:::\n:::\n\n::: {.cell hash='test_use_cache/html/unnamed-chunk-2_1a41d7489cf8efd45d453261e66da72e'}\n\n```{.r .cell-code}\nprojectConfiguration <- createDefaultProjectConfiguration(path = \"_data/TestProject/Code/ProjectConfiguration.xlsx\")\n\n# Replace variables to match my project structure\nprojectConfiguration$dataFolder <- \"_data/TestProject/Data/\"\nprojectConfiguration$modelFolder <- \"_data/TestProject/Models/Simulations/\"\nprojectConfiguration$paramsFolder <- \"_data/TestProject/Parameters/\"\nprojectConfiguration$outputFolder <- \"_data/TestProject/Outputs/\"\n\nprint(projectConfiguration)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nProjectConfiguration: \n   Model folder: _data/TestProject/Models/Simulations/ \n   Parameters folder: _data/TestProject/Parameters/ \n   Parameters file name: ModelParameters.xlsx \n   Individual parameters file name: IndividualParameters.xlsx \n   Individual physiology file name: IndividualPhysiology.xlsx \n   Population parameters file name: PopulationParameters.xlsx \n   Scenario definitions file name: Scenarios.xlsx \n   Scenario applications definitions file name: ApplicationParameters.xlsx \n   Experimental data folder: _data/TestProject/Data/ \n   Experimental data file: TestProject_TimeValuesData.xlsx \n   Data importer configuration: esqlabs_dataImporter_configuration.xml \n   Output folder: _data/TestProject/Outputs/ \n   Output device: \n```\n:::\n:::\n\n\n\n\n\n##  Load predefined simulation\n\n\n\n::: {.cell hash='test_use_cache/html/unnamed-chunk-3_ace636b3558cd9ded946ae356ed3976e'}\n\n```{.r .cell-code}\nscenarioConfigurations <- readScenarioConfigurationFromExcel(\n  scenarioNames = \"TestScenario\",\n  projectConfiguration = projectConfiguration)\n\nprint(scenarioConfigurations$TestScenario)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nProjectConfiguration: \n   Model folder: _data/TestProject/Models/Simulations/ \n   Parameters folder: _data/TestProject/Parameters/ \n   Parameters file name: ModelParameters.xlsx \n   Individual parameters file name: IndividualParameters.xlsx \n   Individual physiology file name: IndividualPhysiology.xlsx \n   Population parameters file name: PopulationParameters.xlsx \n   Scenario definitions file name: Scenarios.xlsx \n   Scenario applications definitions file name: ApplicationParameters.xlsx \n   Experimental data folder: _data/TestProject/Data/ \n   Experimental data file: TestProject_TimeValuesData.xlsx \n   Data importer configuration: esqlabs_dataImporter_configuration.xml \n   Output folder: _data/TestProject/Outputs/ \n   Output device: \nScenarioConfiguration: \n   Model file name: Aciclovir.pkml \n   Scenario name: TestScenario \n   Parameters sheets: Global \n   Individual Id: Indiv1 \n   Application protocol: Aciclovir_iv_250mg \n   Simulation time: 1440 \n   Points per minute: 1 \n   Simulate steady-state: FALSE \n   Steady-state time: 1000 \n   Set test parameters: FALSE \n```\n:::\n:::\n\n\n## Run simulation\n\n\n\n::: {.cell hash='test_use_cache/html/unnamed-chunk-4_b4e100f253c1cf582681928ed564dd21'}\n\n```{.r .cell-code}\nsimulatedScenarios <- runScenarios(\n  scenarioConfigurations = scenarioConfigurations,\n  customParams = NULL, \n  saveSimulationsToPKML = FALSE\n)\n```\n:::\n\n\n::: {.column-margin}\n:::{.callout-warning}\ngot this error:\n\n> Error in initPKSim() : \n> Could not find an installation of PK-Sim on the machine.\n\nAfter installing [`OSPSuite-Full.11.0.139.exe`](https://github.com/Open-Systems-Pharmacology/Suite/releases/tag/v11.0) the code successfull ran.\n\n:::\n:::\n\n## What are the results of the simulation ?\n\n\n::: {.cell hash='test_use_cache/html/unnamed-chunk-5_1997e2bc5da6e006a0e881a0f520dddc'}\n\n```{.r .cell-code}\nstr(simulatedScenarios$TestScenario)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 3\n $ simulation  :Classes 'Simulation', 'ObjectBase', 'DotNetWrapper', 'Printable', 'R6' <Simulation>\n  Inherits from: <ObjectBase>\n  Public:\n    allApplicationsFor: function (quantityPath) \n    allEndogenousStationaryMoleculeNames: function () \n    allFloatingMoleculeNames: function () \n    allStationaryMoleculeNames: function () \n    allXenobioticFloatingMoleculeNames: function () \n    id: 2hi92a8pKk2VDDKGKfcrRw\n    initialize: function (ref, sourceFile = NULL) \n    molWeightFor: function (quantityPath) \n    name: Vergin 1995 IV\n    outputSchema: OutputSchema, DotNetWrapper, Printable, R6\n    outputSelections: OutputSelections, DotNetWrapper, Printable, R6\n    path: Vergin 1995 IV\n    print: function (...) \n    ref: cobjRef\n    root: Container, Entity, ObjectBase, DotNetWrapper, Printable, R6\n    solver: SolverSettings, DotNetWrapper, Printable, R6\n    sourceFile: _data/TestProject/Models/Simulations//Aciclovir.pkml\n  Private:\n    .buildConfiguration: cobjRef\n    .ref: cobjRef\n    .settings: SimulationSettings, DotNetWrapper, Printable, R6\n    .sourceFile: _data/TestProject/Models/Simulations//Aciclovir.pkml\n    finalize: function () \n    printClass: function () \n    printLine: function (entry, value = NULL, addTab = TRUE) \n    readOnlyProperty: function (propertyName, value, returnValue) \n    throwPropertyIsReadonly: function (propertyName) \n    wrapExtensionMethod: function (typename, methodName, propertyName, value) \n    wrapExtensionMethodCached: function (typename, methodName, propertyName, cachedValue, value) \n    wrapIndexProperty: function (propertyName, value) \n    wrapIntegerProperty: function (propertyName, value) \n    wrapNullableIntegerProperty: function (propertyName, value) \n    wrapProperty: function (propertyName, value, shouldSetNull = TRUE) \n    wrapReadOnlyProperty: function (propertyName, value) \n    wrapVectorProperty: function (propertyNameSingular, propertyNamePlural, value, returnPropertyName)  \n $ results     :Classes 'SimulationResults', 'DotNetWrapper', 'Printable', 'R6' <SimulationResults>\n  Inherits from: <DotNetWrapper>\n  Public:\n    allIndividualIds: 0\n    allQuantityPaths: Organism|PeripheralVenousBlood|Aciclovir|Plasma (Periphe ...\n    count: 1\n    getValuesByPath: function (path, individualIds, stopIfNotFound = TRUE) \n    hasResultsForIndividual: function (individualId) \n    initialize: function (ref, simulation) \n    print: function (...) \n    ref: cobjRef\n    resultsForIndividual: function (individualId) \n    simulation: Simulation, ObjectBase, DotNetWrapper, Printable, R6\n    timeValues: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  ...\n  Private:\n    .individualResultsCache: Cache, R6\n    .ref: cobjRef\n    .simulation: Simulation, ObjectBase, DotNetWrapper, Printable, R6\n    allIndividualResults: function (value) \n    finalize: function () \n    getResultsForIndividual: function (individualId) \n    printClass: function () \n    printLine: function (entry, value = NULL, addTab = TRUE) \n    readOnlyProperty: function (propertyName, value, returnValue) \n    throwPropertyIsReadonly: function (propertyName) \n    wrapExtensionMethod: function (typename, methodName, propertyName, value) \n    wrapExtensionMethodCached: function (typename, methodName, propertyName, cachedValue, value) \n    wrapIndexProperty: function (propertyName, value) \n    wrapIntegerProperty: function (propertyName, value) \n    wrapNullableIntegerProperty: function (propertyName, value) \n    wrapProperty: function (propertyName, value, shouldSetNull = TRUE) \n    wrapReadOnlyProperty: function (propertyName, value) \n    wrapVectorProperty: function (propertyNameSingular, propertyNamePlural, value, returnPropertyName)  \n $ outputValues:List of 2\n  ..$ data    :'data.frame':\t1441 obs. of  3 variables:\n  .. ..$ IndividualId                                                             : int [1:1441] 0 0 0 0 0 0 0 0 0 0 ...\n  .. ..$ Time                                                                     : num [1:1441] 0 1 2 3 4 5 6 7 8 9 ...\n  .. ..$ Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood): num [1:1441] 0 2.71 7.83 13.11 18.25 ...\n  ..$ metaData:List of 2\n  .. ..$ Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood):List of 2\n  .. .. ..$ unit     : chr \"Âµmol/l\"\n  .. .. ..$ dimension: chr \"Concentration (molar)\"\n  .. ..$ Time                                                                     :List of 2\n  .. .. ..$ unit     : chr \"min\"\n  .. .. ..$ dimension: chr \"Time\"\n```\n:::\n:::\n\nThe output of the simulation contains:\n\n- The simulations parameters\n- The results which seems to be blood concentration over time for this example.\n\n\n##  Import `ObservedData`\n\n\n::: {.cell hash='test_use_cache/html/unnamed-chunk-6_7869e8414c5ac6e4af70a695771986d5'}\n\n```{.r .cell-code}\ndataSheets <- \"Laskin 1982.Group A\"\nobservedData <- loadObservedData(\n  projectConfiguration = projectConfiguration,\n  sheets = dataSheets\n)\n\nprint(names(observedData))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Aciclovir_Laskin 1982.Group A_1_Human_PeripheralVenousBlood_Plasma_2.5 mg/kg_iv\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}